name: React Frontend CI/CD

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build Docker Image
        run: docker build -t victor823543/focus-frontend --build-arg API_ADDRESS="${{ secrets.API_ADDRESS }}" --build-arg GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}" .
      - name: Publish Image to Docker Hub
        run: docker push victor823543/focus-frontend:latest

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "23"

      - name: Install dependencies
        run: npm install

      - name: Get GitHub Actions runner IP
        run: echo "RUNNER_IP=$(curl -s ifconfig.me)" >> $GITHUB_ENV

      - name: Whitelist GitHub Actions runner IP in MongoDB Atlas
        run: |
          curl --user "${{ secrets.MONGODB_PUBLIC_KEY }}:${{ secrets.MONGODB_PRIVATE_KEY }}" \
          --digest \
          --header "Accept: application/json" \
          --header "Content-Type: application/json" \
          --request POST \
          --data '[
            {
              "ipAddress": "${{ env.RUNNER_IP }}",
              "comment": "GitHub Actions Runner"
            }
          ]' \
          "https://cloud.mongodb.com/api/atlas/v1.0/groups/${{ secrets.MONGO_PROJECT_ID }}/accessList"

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Set up Docker Compose
        run: docker-compose up -d
        env:
          MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: Wait for frontend to be ready
        run: npx wait-on --timeout 30000 http://localhost:80

      - name: Wait for backend to be ready
        run: npx wait-on --timeout 30000 http://localhost:4000/api/health

      - name: Check running containers
        run: docker ps -a

      - name: Check backend health
        run: |
          curl --retry 5 --retry-delay 5 http://localhost:4000/api/health || echo "Backend not ready"

      - name: Install Cypress
        run: docker exec -it focus_frontend_1 npm install --save-dev cypress

      - name: Run E2E tests
        run: docker exec -it focus_frontend_1 npx cypress run

      - name: Remove GitHub Actions runner IP from MongoDB Atlas
        if: always()
        run: |
          curl --user "${{ secrets.MONGODB_PUBLIC_KEY }}:${{ secrets.MONGODB_PRIVATE_KEY }}" \
          --digest \
          --header "Accept: application/json" \
          --header "Content-Type: application/json" \
          --request DELETE \
          "https://cloud.mongodb.com/api/atlas/v1.0/groups/${{ secrets.MONGO_PROJECT_ID }}/accessList/${{ env.RUNNER_IP }}"

      - name: Output Backend Logs (on failure)
        if: failure()
        run: docker-compose logs backend

      - name: Output Frontend Logs (on failure)
        if: failure()
        run: docker-compose logs frontend

  deploy:
    needs:
      - build
      - test
    if: github.ref == 'refs/heads/main'
    runs-on: self-hosted
    steps:
      - name: Pull image from Docker Hub
        run: docker pull victor823543/focus-frontend:latest
      - name: Delete old container
        run: docker rm -f react-app-container
      - name: Run Docker Container
        run: docker run -d -p 3000:80 --name react-app-container victor823543/focus-frontend
